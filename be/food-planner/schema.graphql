type Query {
  user(id: ID!): User
  users: [User!]
  meal(id: ID!): Meal
  meals: [Meal!]
  place(id: ID!): Place
  places: [Place!]
}

type Mutation {
  createMeal(input: CreateMealInput!): Meal!
  deleteMeal(id: ID!): DeleteMealResponse!
}

type DeleteMealResponse {
  deletedMealId: String!
  message: String!
}

type User {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  avatar: String!
  favorites: [String]
  learned: [String]
  meals: [Meal!]!
  createdAt: String!
  modifiedAt: String!
}

type Meal {
  id: String!
  imageUrl: String!
  title: String!
  description: String!
  tags: [String]
  author: String!
  createdAt: String!
  modifiedAt: String!
}

type Place {
  placeId: String!
  name: String!
  description: String!
  tags: [String]
  author: String!
  authorId: String!
  coords: Coords!
  createdAt: String!
  modifiedAt: String!
}

type Coords {
  longitude: String!
  latitude: String!
}

input CreateMealInput {
  imageUrl: String!
  title: String!
  description: String!
  tags: [String]!
  author: String!
}
